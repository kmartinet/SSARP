% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/findShapeAreas.R
\name{findShapeAreas}
\alias{findShapeAreas}
\title{Find location name and area for occurrence records using user-provided shape file}
\usage{
findShapeAreas(occs, shapefile, names = NULL)
}
\arguments{
\item{occs}{The dataframe that is returned by SSARP::getData. If using a custom occurrence record dataframe, ensure that it has the following columns: "decimalLatitude", "decimalLongitude", "genericName", "specificEpithet", and "datasetKey". The "datasetKey" column is important for GBIF records and identifies the dataset to which the occurrence record belongs. Custom dataframes without this style of data organization should fill the column with placeholder values.}

\item{shapefile}{A shapefile (.shp) containing spatial information for the geographic locations of interest (e.g., habitat fragments, lakes, rivers)}

\item{names}{If the user would like to restrict which polygons in the shapefile are included in the returned occurrence record dataframe, they can be specified here as a vector. If the user does not provide a vector, all of the non-NA names in the shapefile will be included (as found in shapefile$name) (Optional)}
}
\value{
A list including two objects: "occs" (a dataframe of the species name, polygon name, polygon area, and GBIF datasetKey (if applicable) for each occurrence record) and "not_included" (a vector of names from the original occurrence record dataframe that are not in the final one)
}
\description{
Reference user-provided shape file to find location names and areas for occurrence records. This function is primarily written for users who want to create species- and speciation-area relationships for organisms living on systems that would not be covered by the island database referenced by SSARP::findAreas.
}
\examples{
\dontrun{
key <- getKey(query = "Anolis", rank = "genus")
dat <- getData(key = key, limit = 100)

occs <- findShapeAreas(occs = dat, shapefile = shapefile, names = NULL)
new_occs <- occs[[1]]}
}
